name: Create and publish a Docker image

on:
  workflow_dispatch:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
      environment: prod
      runs-on: self-hosted
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
  
        - name: Log in to the Container registry
          uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  
        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
          with:
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
  
        - name: Generate artifact attestation
          uses: actions/attest-build-provenance@v1
          with:
            subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            subject-digest: ${{ steps.push.outputs.digest }}
            push-to-registry: true

  deploy:
    environment: prod
    runs-on: self-hosted
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v1.1.0
        env:
          PORT: 3333
          HOST: "0.0.0.0"
          APP_KEY: ${{ secrets.APP_KEY }}
          LOG_LEVEL: "debug"
          SESSION_DRIVER: "cookie"
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          REGISTRY: ghcr.io
          IMAGE: ${{ github.repository }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          envs: PORT,HOST,APP_KEY,LOG_LEVEL,SESSION_DRIVER,DB_HOST,DB_PORT,DB_USER,DB_PASSWORD,DB_DATABASE,REGISTRY,IMAGE_NAME,IMAGE
          script: |
            docker stop $IMAGE_NAME || true
            docker rm $IMAGE_NAME || true
            docker run -d \
            --restart always \
            --name $IMAGE_NAME \
            -p $PORT:$PORT \
            -e PORT=$PORT \
            -e HOST=$HOST \
            -e APP_KEY=$APP_KEY \
            -e LOG_LEVEL=$LOG_LEVEL \
            -e SESSION_DRIVER=$SESSION_DRIVER \
            -e DB_HOST=$DB_HOST \
            -e DB_PORT=$DB_PORT \
            -e DB_USER=$DB_USER \
            -e DB_PASSWORD=$DB_PASSWORD \
            -e DB_DATABASE=$DB_DATABASE \
            $REGISTRY/$IMAGE:main
